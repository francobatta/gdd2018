<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="label17.Text" xml:space="preserve">
    <value>Solo se mostrarán aquellas publicaciones que cumplan con la restricción del config: el día "hoy" debe encontrarse entre la fecha de publicación y la de vencimiento. El paginado es de a 10 publicaciones.</value>
  </data>
</root>