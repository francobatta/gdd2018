<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yL44M80OJLYAAAAASUVORK5CYII=
</value>
  </data>
</root>